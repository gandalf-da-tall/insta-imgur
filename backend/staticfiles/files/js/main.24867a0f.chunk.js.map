{"version":3,"sources":["constants/postConstants.js","store.js","reducers/postReducers.js","components/header/Header.js","components/footer/Footer.js","components/post/Post.js","components/loader/Loader.js","components/message/Message.js","actions/postActions.js","screens/homeScreen/HomeScreen.js","screens/postScreen/PostScreen.js","components/formContainer/FormContainer.js","screens/uploadScreen/UploadScreen.js","components/helpers/ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["POST_LIST_REQUEST","POST_LIST_FAIL","POST_LIST_SUCCESS","POST_DETAILS_REQUEST","POST_DETAILS_FAIL","POST_DETAILS_SUCCESS","POST_CREATE_REQUEST","POST_CREATE_FAIL","POST_CREATE_SUCCESS","POST_CREATE_RESET","POST_CREATE_COMMENT_REQUEST","POST_CREATE_COMMENT_FAIL","POST_CREATE_COMMENT_SUCCESS","POST_CREATE_COMMENT_RESET","reducer","combineReducers","postList","state","posts","action","type","loading","payload","error","postDetails","post","comments","postCommentCreate","success","postCreate","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","Footer","Row","Col","Post","Card","_id","Img","src","image","Title","title","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","listPosts","dispatch","a","axios","get","data","response","message","HomeScreen","useDispatch","useSelector","useEffect","breakpointCols","default","columnClassName","map","PostScreen","match","useParams","useState","comment","setComment","loadingPostComment","errorPostComment","successPostComment","md","Image","alt","Body","length","ListGroup","Item","class","Form","onSubmit","e","preventDefault","postId","getState","detail","createPostComment","Group","controlId","Label","Control","row","maxLength","value","required","onChange","target","placeholder","Button","disable","FormContainer","xs","UploadScreen","navigate","useNavigate","setImage","imgPreview","setImgPreivew","setTitle","loadingCreate","errorCreate","createdPost","successCreate","uploadFileHandler","file","files","formData","FormData","append","previewFile","URL","createObjectURL","label","custom","accept","fluid","ScrollToTop","pathname","useLocation","window","scrollTo","App","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24867a0f.chunk.js","sourcesContent":["export const POST_LIST_REQUEST = \"POST_LIST_REQUEST\";\r\nexport const POST_LIST_FAIL = \"POST_LIST_FAIL\";\r\nexport const POST_LIST_SUCCESS = \"POST_LIST_SUCCESS\";\r\n\r\nexport const POST_DETAILS_REQUEST = \"POST_DETAILS_REQUEST\";\r\nexport const POST_DETAILS_FAIL = \"POST_DETAILS_FAIL\";\r\nexport const POST_DETAILS_SUCCESS = \"POST_DETAILS_SUCCESS\";\r\n\r\nexport const POST_CREATE_REQUEST = \"POST_CREATE_REQUEST\";\r\nexport const POST_CREATE_FAIL = \"POST_CREATE_FAIL\";\r\nexport const POST_CREATE_SUCCESS = \"POST_CREATE_SUCCESS\";\r\nexport const POST_CREATE_RESET = \"POST_CREATE_RESET\";\r\n\r\nexport const POST_CREATE_COMMENT_REQUEST = \"POST_CREATE_COMMENT_REQUEST\";\r\nexport const POST_CREATE_COMMENT_FAIL = \"POST_CREATE_COMMENT_FAIL\";\r\nexport const POST_CREATE_COMMENT_SUCCESS = \"POST_CREATE_COMMENT_SUCCESS\";\r\nexport const POST_CREATE_COMMENT_RESET = \"POST_CREATE_COMMENT_RESET\";\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  postListReducer,\r\n  postDetailsReducer,\r\n  postCommentCreateReducer,\r\n  postCreateReducer,\r\n} from \"./reducers/postReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  postList: postListReducer,\r\n  postDetails: postDetailsReducer,\r\n  postCommentCreate: postCommentCreateReducer,\r\n  postCreate: postCreateReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_CREATE_COMMENT_REQUEST,\r\n  POST_CREATE_COMMENT_SUCCESS,\r\n  POST_CREATE_COMMENT_FAIL,\r\n  POST_CREATE_COMMENT_RESET,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n  POST_CREATE_RESET,\r\n} from \"../constants/postConstants\";\r\n\r\n// this file handles state calls made from the actions\r\n\r\nexport const postListReducer = (state = { posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case POST_LIST_REQUEST:\r\n      return { loading: true, posts: [] };\r\n    case POST_LIST_SUCCESS:\r\n      return { loading: false, posts: action.payload };\r\n    case POST_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postDetailsReducer = (\r\n  state = { post: { comments: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case POST_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case POST_DETAILS_SUCCESS:\r\n      return { loading: false, post: action.payload };\r\n    case POST_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postCommentCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_CREATE_COMMENT_REQUEST:\r\n      return { loading: true };\r\n    case POST_CREATE_COMMENT_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case POST_CREATE_COMMENT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case POST_CREATE_COMMENT_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const postCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case POST_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case POST_CREATE_SUCCESS:\r\n      return { loading: false, success: true, post: action.payload };\r\n    case POST_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case POST_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            Insta-Imgur\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <Nav.Link as={Link} to=\"/upload\">\r\n                <i className=\"fas fa-plus-circle\"></i>Create Post\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Insta-Imgur</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Post.styles.css\";\r\n\r\n//creats the post cards for the home screen\r\nfunction Post({ post }) {\r\n  return (\r\n    <Card className=\"rounded\">\r\n      <Link to={`/post/${post._id}`} className=\"link-styles\">\r\n        {\" \"}\r\n        <Card.Img src={post.image} />{\" \"}\r\n      </Link>\r\n      <Link to={`/post/${post._id}`} className=\"link-styles\">\r\n        <Card.Footer className=\"footStyles\">\r\n          {\" \"}\r\n          <Card.Title as=\"div\">\r\n            <h5>{post.title}</h5>\r\n          </Card.Title>\r\n        </Card.Footer>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n//creates spinning animation when loading data\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\n// message for alerts\r\nfunction Message({ variant, children }) {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n}\r\n\r\nexport default Message;\r\n","import axios from \"axios\";\r\n\r\n// constants\r\nimport {\r\n  POST_LIST_REQUEST,\r\n  POST_LIST_SUCCESS,\r\n  POST_LIST_FAIL,\r\n  POST_DETAILS_REQUEST,\r\n  POST_DETAILS_SUCCESS,\r\n  POST_DETAILS_FAIL,\r\n  POST_CREATE_COMMENT_REQUEST,\r\n  POST_CREATE_COMMENT_SUCCESS,\r\n  POST_CREATE_COMMENT_FAIL,\r\n  POST_CREATE_REQUEST,\r\n  POST_CREATE_SUCCESS,\r\n  POST_CREATE_FAIL,\r\n} from \"../constants/postConstants\";\r\n\r\n//Goes to the home screen\r\nexport const listPosts = () => async (dispatch) => {\r\n  try {\r\n    // get state\r\n    dispatch({ type: POST_LIST_REQUEST });\r\n\r\n    // send get request\r\n    const { data } = await axios.get(\"/api/posts/\");\r\n\r\n    // update state with success data\r\n    dispatch({\r\n      type: POST_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    // udate state with error\r\n    dispatch({\r\n      type: POST_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// goes to the Post screen\r\nexport const listPostDetails = (id) => async (dispatch) => {\r\n  try {\r\n    // get state\r\n    dispatch({ type: POST_DETAILS_REQUEST });\r\n\r\n    // send get request\r\n    const { data } = await axios.get(`/api/posts/${id}`);\r\n\r\n    // update state with success data\r\n    dispatch({\r\n      type: POST_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    // udate state with error\r\n    dispatch({\r\n      type: POST_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Goes to the post screen\r\nexport const createPostComment =\r\n  (postId, comment) => async (dispatch, getState) => {\r\n    try {\r\n      // get state\r\n      dispatch({ type: POST_CREATE_COMMENT_REQUEST });\r\n\r\n      // send get request\r\n      const { data } = await axios.post(\r\n        `/api/posts/${postId}/comments/`,\r\n        comment\r\n      );\r\n\r\n      // update state with success data\r\n      dispatch({\r\n        type: POST_CREATE_COMMENT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      // udate state with error\r\n      dispatch({\r\n        type: POST_CREATE_COMMENT_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// goes to the upload screen\r\nexport const createPost = (post) => async (dispatch, getState) => {\r\n  try {\r\n    // get state\r\n    dispatch({ type: POST_CREATE_REQUEST });\r\n\r\n    // send get request\r\n    const { data } = await axios.post(`/api/upload/`, post);\r\n\r\n    // update state with success data\r\n    dispatch({\r\n      type: POST_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    // udate state with error\r\n    dispatch({\r\n      type: POST_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Post from \"../../components/post/Post\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Message from \"../../components/message/Message\";\r\nimport { listPosts } from \"../../actions/postActions\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport \"./HomeScreen.styles.css\";\r\n\r\nfunction HomeScreen() {\r\n  //grabs state and lists post cards\r\n  const dispatch = useDispatch();\r\n  const postList = useSelector((state) => state.postList);\r\n  const { error, loading, posts } = postList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listPosts());\r\n  }, [dispatch]);\r\n\r\n  // breakpoints for the staggered post hieghts\r\n  const breakpointColumnsObj = {\r\n    default: 5,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1,\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"titleStyles\">Latest Posts</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n          {posts.map((post) => (\r\n            <div key={post._id}>\r\n              <Post post={post} />\r\n            </div>\r\n          ))}\r\n        </Masonry>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Message from \"../../components/message/Message\";\r\nimport { listPostDetails, createPostComment } from \"../../actions/postActions\";\r\nimport { POST_CREATE_COMMENT_RESET } from \"../../constants/postConstants\";\r\nimport \"./PostScreen.styles.css\";\r\n\r\nfunction PostScreen() {\r\n  // param to match to post\r\n  const match = useParams();\r\n\r\n  // state for comments\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  // accessing state\r\n  const dispatch = useDispatch();\r\n  // gets the post\r\n  const postDetails = useSelector((state) => state.postDetails);\r\n  const { loading, error, post } = postDetails;\r\n  //creates the new comment\r\n  const postCommentCreate = useSelector((state) => state.postCommentCreate);\r\n  const {\r\n    loading: loadingPostComment,\r\n    error: errorPostComment,\r\n    success: successPostComment,\r\n  } = postCommentCreate;\r\n\r\n  //resets the comment state\r\n  useEffect(() => {\r\n    if (successPostComment) {\r\n      setComment(\"\");\r\n      dispatch({ type: POST_CREATE_COMMENT_RESET });\r\n    }\r\n\r\n    dispatch(listPostDetails(match.id));\r\n  }, [match, dispatch, successPostComment]);\r\n\r\n  //handles the comment subit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createPostComment(match.id, { comment }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          {\" \"}\r\n          <Container>\r\n            <Row>\r\n              <Card className=\"pcContainer\">\r\n                <Card.Header className=\"titleHeader\">\r\n                  <Card.Title>\r\n                    <h3>{post.title}</h3>\r\n                  </Card.Title>\r\n                </Card.Header>{\" \"}\r\n              </Card>\r\n            </Row>\r\n            <Row className=\"pcContainer\">\r\n              <Col md={6} className=\"sideA\">\r\n                <Image src={post.image} alt={post.title} className=\"fullSize\" />\r\n              </Col>\r\n              <Col md={6} className=\"sideB\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <Card.Title>\r\n                      <h4>Comments</h4>\r\n                    </Card.Title>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body className=\"scroll\">\r\n                    {post.comments.length === 0 && (\r\n                      <Message variant=\"info\">No Comments </Message>\r\n                    )}\r\n                    <ListGroup variant=\"flush\">\r\n                      {post.comments.map((comment) => (\r\n                        <ListGroup.Item key={comment._id}>\r\n                          <div className=\"commentGroup\">\r\n                            <div className=\"commentItem\">\r\n                              {\" \"}\r\n                              <i class=\"fas fa-user\"></i>\r\n                            </div>\r\n                            <div className=\"commentItem\">\r\n                              {comment.comment}{\" \"}\r\n                            </div>{\" \"}\r\n                          </div>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                  <Card.Footer className=\"compFooter\">\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <h4>Write a Comment</h4>\r\n                        {loadingPostComment && <Loader />}\r\n                        {successPostComment && (\r\n                          <Message variant=\"success\">Comment Submitted</Message>\r\n                        )}\r\n                        {errorPostComment && (\r\n                          <Message variant=\"danger\">{errorPostComment}</Message>\r\n                        )}\r\n                        <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId=\"comment\">\r\n                            <Form.Label>Comment</Form.Label>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              row=\"5\"\r\n                              maxLength=\"200\"\r\n                              value={comment}\r\n                              required\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                              placeholder=\"Join the Conversation\"\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n\r\n                          <Button\r\n                            disable={loadingPostComment}\r\n                            type=\"submit\"\r\n                            variant=\"primary\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </Form>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Card.Footer>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n// function for formating forms\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Message from \"../../components/message/Message\";\r\nimport FormContainer from \"../../components/formContainer/FormContainer\";\r\nimport { createPost, listPosts } from \"../../actions/postActions\";\r\nimport { POST_CREATE_RESET } from \"../../constants/postConstants\";\r\nimport { Image, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction UploadScreen() {\r\n  // navigation params from router\r\n  const navigate = useNavigate();\r\n\r\n  //getting global state\r\n  const dispatch = useDispatch();\r\n\r\n  //setting up local state\r\n  const [image, setImage] = useState(\"\");\r\n  const [imgPreview, setImgPreivew] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  // loads global sate\r\n  const postCreate = useSelector((state) => state.postCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    post: createdPost,\r\n    success: successCreate,\r\n  } = postCreate;\r\n\r\n  //nagigates to post page and resets global state for upload\r\n  useEffect(() => {\r\n    dispatch({ type: POST_CREATE_RESET });\r\n\r\n    if (successCreate) {\r\n      navigate(`/post/${createdPost._id}`);\r\n    } else {\r\n      dispatch(listPosts());\r\n    }\r\n  }, [dispatch, navigate, successCreate, createdPost]);\r\n\r\n  // handler for creating post\r\n  const createPostHandler = (e) => {\r\n    e.preventDefault();\r\n    image.append(\"title\", title);\r\n    dispatch(createPost(image));\r\n  };\r\n\r\n  //handler for setting image state\r\n  const uploadFileHandler = async (e) => {\r\n    // get files and create form data\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    // set image and image preview state\r\n    setImage(formData);\r\n    const previewFile = URL.createObjectURL(e.target.files[0]);\r\n    setImgPreivew(previewFile);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      <FormContainer>\r\n        <h1>Create Post</h1>\r\n\r\n        <Form onSubmit={createPostHandler}>\r\n          <Form.Group controlId=\"title\">\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              type=\"title\"\r\n              placeholder=\"Enter title\"\r\n              maxLength=\"200\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>\r\n\r\n            <Form.Control\r\n              type=\"file\"\r\n              id=\"image-file\"\r\n              label=\"Choose File\"\r\n              custom\r\n              onChange={uploadFileHandler}\r\n              required\r\n              accept=\".jpg,.jpeg,.png,.gif\"\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <div style={{ margin: \"20px\" }}>\r\n            <Image src={imgPreview} fluid />{\" \"}\r\n          </div>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadScreen;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//scrolls to the top of the page on navigation\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import { Container } from \"react-bootstrap\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport Footer from \"./components/footer/Footer\";\nimport HomeScreen from \"./screens/homeScreen/HomeScreen\";\nimport PostScreen from \"./screens/postScreen/PostScreen\";\nimport UploadScreen from \"./screens/uploadScreen/UploadScreen\";\nimport ScrollToTop from \"./components/helpers/ScrollToTop\";\nimport \"./App.css\";\n\n// main app component where the routing happens\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <main className=\"py-3\">\n        <Container fluid className={\"mainContainer\"}>\n          <ScrollToTop />{\" \"}\n          <Routes>\n            {\" \"}\n            <Route path=\"/\" element={<HomeScreen />} />\n            <Route path=\"/post/:id\" element={<PostScreen />} exact />\n            <Route path=\"/upload\" element={<UploadScreen />} exact />\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}